* доделать тесты групп
* протестировать
  - standalone test (простой и перфтест) протестировать
  - ClusterDiscoveryTests
  - ClusterFeedbackTests
  - ClusterFailureDetectionTests
  - ClusterCommandsTests
  - ClusterMembershipTests
------------
При тестировании тестировать под отладчиком, а также проверять race cinditiins по каждому протоколу

Channel:
* worker node gracefull exit
  - добавляем воркера в две группы, выполеяем gracefull выход воркера, смотрим что на координаторе кластера появилось соотв. состояние, проверяем, что узел был исключен из всех своих групп (на него было инсталлировано соотв. членство) и после этого вышел из кластера (канал закрыт остальные получиои членство коастера без этого узла)
* NodeChannel
  - gracefulClose (таймаут, деинсталляция членства, закрытие канала).
    * создать кластер закрыть gracefully один кор и один воркер узел, проверить
  - channel reconnect (деинсталляция членства, закрытие канала, вызов внешнего реконнектора)
    * создать кластер, вызвать reconnect воркер узла, проверить

Check:
* проверить на perf тестах

-ClusterDiscovery-:
+ нормальный вход воркеров в группу
  - сформировать кластер, не запуская воркеров
  - стартовать воркеров
  - проверить что все воркеры вошли в группу
+ падение кор узла при входе воркера
  - стартовать один кор узел
  - стартовать несколько воркеров
  - через небольшой промежуток остановить кор узел
  - стартовать кор узел снова
  - проверить образование кластера
  - остановить кор узел
  - проверить что кластер разрушен
  - стартовать кор узел
  - проверить что кластер снова образован
+ проверка входа не через координатор
  - в воркерах в качестве велл ноун точек входа задать узлы не координатора
  - остановить один из узлов 
  - проверить вход воркеров
+ проверка падения кор коорлинатора
  - создать кластер без воркеров
  - стартовать воркеров
  - остаеовить координатора
  - проверить что воркеры вошли
+ все проверки идут полунием текущего членства кластера с каждого узла
  
-Feedback-:
+ проверить юнит тестом каждый из feedback provider'ов (dataloss, group, node) и их сериализаторы
  - изменение данных
  - первичное получение после изменения
  - вторичное получение
  - force получение
  - отработка изменения членства
  - сериализация
  - тестирование собственного api
+ CoreFeedbackProtocol
  - изменить данные провайдера на воркере, чтобы он вернул их
  - проверить что изменения прошли через контроллер и координатора
  - закрыть контроллер проверить что изменения прошли через новый контроллер
  - закрыть координатора, проверить что изменения прошли через новый координатор
  - проверить, что при изменении срабатывают listerner'ы
  - проверить, что изменения состояния воркера передаются не чаще заданного времени обмена
  - проверить что провайдеры отрабатывают изменения членства кластера

-FailureDetection-:
+ WorkerClusterFailureDetectionProtocol
  - reconnect on controller failure after orphan period expired
    * создать кластер
    * закрыть контроллер и выждать
    * проверить, что на воркере прошел реконнект
  - поддержка failure history
    * выполнить несколько закрытий воркеров
    * проверить на остальных, что история создалась
    * проверить через заданный период, что история очистилась
  - посылка shun при получении сообщения от failed узла и реконнект при получении shun
    * маркиповать на одном воркере узел, как failed
    * послать от его имени сообщение
    * проверить, что для него выполнен реконнект
+ CoreClusterFailureDetectionProtocol, CoreCoordinatorClusterFailureDetectionProtocol
  - падение координатора
    * закрыть воркер и координатор кластера
    * проверить, что обновление членства клвстера прошло и failure listeners сработали на контроллере
  - падение контроллера
    * закрыть воркер
    * закрыть его контроллер
    * проверить отработку изменения членства кластера

-Management-:
+ CommandManager
  - создать тестовую команду c хендлером и выполнить ее на произвольном кор узле
  - проверить, что команда выполнилась на всех кор узлах
  - проверить что completionhandler сработал

-Membership-:
+ CoreCoordinatorClusterMembershipProtocol, CoreClusterMembershipProtocol, 
  WorkerClusterMembershipProtocol
  - создать кластер, проверить
  - создать группы, проверить
  - создать нового воркера, удалить старого, создать, изменить и удалить группы, проверить

Тесты групп:
* WorkerGroupDiscoveryProtocol
  - создать кластер с группой
  - добавить воркера, проверить, что на координаторе группы узел найден
  - проверить инсталояцию членства группы с узлом
* WorkerGroupFailureDetectionProtocol, GroupFailureDetectionProtocol
  - создать кластер с группой
  - закрыть воркера
  - проверить что на узлах группы он помечен как failed
  - проверить инсталояцию членства группы без узла
* WorkerGroupMembershipProtocol, GroupProtocolSubStack
- создать кластер
- создать три группы, проверить что на них инсталлировано членство групп
- добавить новую, удалить и изменить старые, проверить их членства групп, провепить через некоторое время что для удаленной удален ее подстек протоколов
- TODO:

Cluster flow control, flush, state, multicast тесты:
* взять за основу тесты кор группы и прогнать их на одной из групп воркеров
* кроме падений узлов группы включить падения координатора кластера и контроллеров узлов группы
* продумать, какие еще тесты полезны