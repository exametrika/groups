h1. Юнит тест на базе modelling framework

Поскольку мы используем TCP транспорт, то на базе modelling framework мы можем моделировать только задержки между узлами, но не потерю иреордеринг сообщений, поскольку для этого нужно внедриться в tcp стек протоколов.

h1. Ручной standalone тест

Запускаем несколько узлов группы на одном хосте и тестируем в ручнрм режиме по логам и с помощью самого теста работу следующих сценариев:
* образование группы несколькими wellknown узлами с переносом начального состояния из внешнего хранилища. Формируем файл начального состояния (несколько гигабайт) и передаем его в каждый узел через файловое хранилище. Сбой части узлов при входе
* мультикаст в группе - посылаем на максимальной скорости push/pull сообщения
* выход узла из группы (gracefull или сбойный). Сбой простого узла и координатора вовремя флаш. Мультикаст не останавливается.
* вход узла в группу. Сбой клиента, сервера и координатора переноса. Мультикаст не останавливается
* замер пропускной способности и задержек в различных вариантах использования

h1. Distributed test

На базе нашей среды распределенного тестирования сделать тест, формирующий группу, запускающий новые и останавливающий старые узлы случайным образом, но так, чтобы текущее количество узлов было в рамках минимального и максимального. Изменение членства идет не чаще и не реже заданных рамок. Узлы шлют друг другу сообщения на заданной или максимальной скорости. Задается начальное состояние группы, заданного размера, которое генерируется в StateStore на каждом узле.

Периодически идет проверка, что все сообщения приняты (за исключением тех, где упал отправитель) и состояние узлов не разъехалось.

Писать статистику пропускной способности и задержек на каждом узле (илеально подключить к экзаметрике по аналогии с messaging).

Развернуть и проверить в облаке Azure.